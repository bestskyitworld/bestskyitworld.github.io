<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>全世界最好的Sky</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.bestsky.club/"/>
  <updated>2020-07-09T12:59:24.409Z</updated>
  <id>https://www.bestsky.club/</id>
  
  <author>
    <name>BestSkyITWorld</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>聊一聊Java这条路该怎么走</title>
    <link href="https://www.bestsky.club/2020/07/09/%E8%81%8A%E4%B8%80%E8%81%8AJava%E8%BF%99%E6%9D%A1%E8%B7%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E8%B5%B0/"/>
    <id>https://www.bestsky.club/2020/07/09/%E8%81%8A%E4%B8%80%E8%81%8AJava%E8%BF%99%E6%9D%A1%E8%B7%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E8%B5%B0/</id>
    <published>2020-07-09T05:17:46.000Z</published>
    <updated>2020-07-09T12:59:24.409Z</updated>
    
    <content type="html"><![CDATA[<p>网上有很多关于Java学习路线的帖子，有些列了很长的思维导图，看着很费劲也看不明白，还有一些讲得太深，对于初学者来说不太友好。今天我从零开始给大家讲讲从起步到工作需要哪些技术，这些技术大概是做什么的。文章有点长，如果耐心看完，相信对你今后的学习规划和进度会有很大的帮助。</p><p><img src="/2020/07/09/%E8%81%8A%E4%B8%80%E8%81%8AJava%E8%BF%99%E6%9D%A1%E8%B7%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E8%B5%B0/image-20200709143657327.png" alt="image-20200709143657327"></p><a id="more"></a><h2 id="Java开发到底是做什么"><a href="#Java开发到底是做什么" class="headerlink" title="Java开发到底是做什么"></a>Java开发到底是做什么</h2><p>就目前来讲，基于Java开发一共有两条路可走，第一条路就是安卓开发，有人说现在安卓就业不太友好，因为现在App太多，好像谁都能做一样，所以竞争很激烈，一个产品想要面向市场做的很好，难度非常大，另一种说法就是对立了，因为现在智能手机的普及，人们对于App的需求也变高了，所以这算是优势。</p><p>但Java最主要的开发方向，就是基于Web开发，也就是我们所说的网页后台开发。Java在这个行业有着天然的优势，高并发性能好，开源项目生态好，所有的大型网站，像淘宝、京东这些大型电商网站，不可能用其他语言作为后台语言，虽然Python、PHP也能做，但是网站一旦做大了，它们根本没法稳定的运行。淘宝最开始是用的PHP，但是随着用的人越来越多，最后他们把整个项目换成了Java。</p><p>顺带提一下桌面应用开发，想要做这个行业的小伙伴我可以直接劝退了，因为Java不适合做桌面应用程序的开发，虽然Java可以用awt、swing设计图形界面，但是性能太低而且可以移植性也差，基本已经凉凉了。所以想要做游戏或者其他的桌面程序的小伙儿可以去学C#，也是非常香的。</p><p>下面简单的用导图列出了整个学习的路线，具体的内容将在文章中详细介绍。</p><p><img src="/2020/07/09/%E8%81%8A%E4%B8%80%E8%81%8AJava%E8%BF%99%E6%9D%A1%E8%B7%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E8%B5%B0/image-20200709205248022.png" alt="image-20200709205248022"></p><h2 id="阶段一：JavaSE"><a href="#阶段一：JavaSE" class="headerlink" title="阶段一：JavaSE"></a>阶段一：JavaSE</h2><p>JavaSE就是Java Standard Edition，Java标准版本，这个阶段我们学的就是java的语法还有java的特性，很多人对于学Java有误解，认为学Java就是学的JavaSE，这是很天真的想法，这个阶段的学习专业点的术语叫做MAS（Minimum action step）最小行动步骤，什么意思呢？就是如果你只学了JavaSE，那么你什么都干不了，如果你不学，那么后面的技术你同样也学不了。所以这个阶段的学习十分重要，就是打地基，你学的越扎实，后面越轻松。</p><p>还有一点要提的是：我建议在开始学Java之前，最好学一下C语言。Java其实跟C语言非常像，因为Java就是用C和C++写的，但是摈弃了C和C++中一些不安全的操作和进行了优化改进，学完C语言后能和Java进行无缝对接，而且很多知识点在C语言出现过的，可以一带而过，so easy too happy。这里我推荐郝斌老师的C语言教程，我对郝斌老师的感情可以说是非常深了，因为最开始入这个门就是看他的视频，讲得通俗易懂而且还很幽默，完全不会因为代码的枯燥而无聊，反正无脑吹就对了。他有C和Java的教学视频，当然还有数据结构和Sql Server的视频，我当初看完C立马接着看他的Java视频了，连接非常顺畅。但是这里我还是推荐看其他新一点的视频，因为郝斌老师的视频是09年录的，稍稍有点老了，推荐动力节点的Java教程，比较新而且非常非常非常全，老师也是非常不错。（这些视频b站上都能直接搜到，完全免费还带资料。下面所有的技术你都能在b站上找到很好教程，外面几万块的课全部免费，我的大学基本就是在b站读的….）</p><h2 id="阶段二：MySql和JDBC"><a href="#阶段二：MySql和JDBC" class="headerlink" title="阶段二：MySql和JDBC"></a>阶段二：MySql和JDBC</h2><h3 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h3><p>Mysql就是数据库的一种，这个阶段的学习也是非常非常重要，是难点也是重点。现在的软件开发行业，不管你学的什么语言，你不学数据库，你根本做不了开发，为什么这么说，因为只要你是做程序开发的，必定离不开对数据的操作，比方说，你进入一个网站或者一个app，你肯定要注册登录吧，那么你的账号密码就要存储吧，不然你下次怎么登陆呢？那么怎么存呢？存在程序里吗？第一你存不了这么多数据，你的ROM就这么点大还这么贵，就算你能存吧，你这程序一停止，或者你电脑一关机，你的数据就没了。你用Excel存吗？一个平台的人数这么多，就算你能存吧，你打开这个文件不知道要多久，况且这么多数据查查找非常慢，所以你就需要数据库，它其实就是一个类似于Excel的东西，只不过存储性能极高，能存储千万级数据，查找数据极快，现阶段的学习主要学的是对数据的增删改查，包括你以后在公司里做的，八九也就是增删改查，重点也就是查。但你要进阶的往下学，底层的东西和高级部分就有点难了，推荐在学完整个基础后，回过头来好好学学原理。</p><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><p>JDBC（Java Database Connectivity），Java数据库连接，简单来讲就是如何用Java去操作数据库，这算是一个小小的技术，学起来非常快，但很实用，它将会伴随你整个开发生涯。</p><h2 id="阶段三：网页前端技术"><a href="#阶段三：网页前端技术" class="headerlink" title="阶段三：网页前端技术"></a>阶段三：网页前端技术</h2><h3 id="什么是前端和后端？"><a href="#什么是前端和后端？" class="headerlink" title="什么是前端和后端？"></a>什么是前端和后端？</h3><p>相信很多小伙伴都有听说过前端和后端，但不是很了解，这里我给大家简单的说下什么是前端什么是后端。</p><p>前端技术就是你所能看到的东西，例如一个网页有背景，有列表分类，有搜索框，这些东西就是前端要写的东西，而后端就是你点击搜索后，会呈现你想要搜索的内容，它后台是怎么查找的你看不到，你在页面上只能看到结果，我们做Java开发，主要就是对于后台功能的实现。</p><h4 id="为啥要学前端？"><a href="#为啥要学前端？" class="headerlink" title="为啥要学前端？"></a>为啥要学前端？</h4><p>那么问题来了，我们学后端的人，为啥要学前端呢？刚开始也我很苦恼，心想，这种东西难道公司里没有什么学设计的小姐姐去搞吗？我凭什么要把页面做的这么好看，我只要把功能写出来就行了啊。但事实是，你一开始去的公司，很可能是小公司，公司为了节省成本和人力，你基本上要把前后端的活全包了，这样公司能少发一个人的工资。当然你进了大厂，那么基本上公司里的项目都是前后端分离的，你不用关心前端的代码，你只要写好你的功能就行了。所以保险起见，我建议小伙伴们还是要好好学前端，我看了很多公司的招聘，他们都是要求会前端的，他们的要求里写的很明白，会前端框架的优先考虑，所以这绝对是加分项了（我现在就很后悔我前端没好好学）。当然学习前端也不仅仅是这个原因，因为我们在写后台的时候，总会去前端去取数据，那么如果你前端一窍不通，你压根就没法操作，你不知道这个数据是怎么传过来的，也不知道怎么把数据回传给前端页面，所以前端可以不学精，但一定要学，或多或少会一点即可。</p><h3 id="前端的三门主要技术"><a href="#前端的三门主要技术" class="headerlink" title="前端的三门主要技术"></a>前端的三门主要技术</h3><h4 id="HTML-amp-CSS-amp-JavaScript"><a href="#HTML-amp-CSS-amp-JavaScript" class="headerlink" title="HTML&amp;CSS&amp;JavaScript"></a>HTML&amp;CSS&amp;JavaScript</h4><p>简单的介绍一下这三门技术：HTML就是网页的骨架，就好比建房子时，整个的框架，CSS就是如何把网页装饰的很漂亮，好比房子的装修，而JavaScript就是让这个网页”动”起来，好比你房子的各种智能家居，你不用手动拉窗帘，你可以用手机去控制窗帘的开关。</p><p>另外，这三门技术都是脚本语言，就是不用编译就能运行，只要你有浏览器就行，你代码语法错误它也照常能运行，属于弱类型的语言。还有一点就是JavaScript，很多人有误解，认为它跟Java有什么关系，实际上压根就没关系，如果非要说有关系，那么就是它的语法跟Java很像而已（它原来不叫JavaScript，后来改成这个就是为蹭Java的热度）。</p><h2 id="阶段四：JavaWeb"><a href="#阶段四：JavaWeb" class="headerlink" title="阶段四：JavaWeb"></a>阶段四：JavaWeb</h2><p>学到这里，那么恭喜你，你已经可以完成一个网站的一些基本功能了，在2000年左右的时候已经能找到一份不错的工作了。但是技术升级得非常快，如今停留在这个阶段，工作是远远不够的。</p><p>这个阶段的学习，就是学习如何将前后端交互，完成一个功能。这里综合了你前面所有学习到技术，你将会用到数据库去验证账号密码是否正确，你将会从数据库取到数据传递给前端页面显示，你也能够完成一个账号密码真正意义上的修改（从网页修改数据库中的数据）。所以你不难发现，你这些功能永远都在跟数据库打交道，这也是我在前面讲的，为什么数据库这么重要的原因。</p><p>除此之外，你还能学习很多新的小技术，例如没有登录之前，无法进入指定的页面（Filter过滤器，Session会话），记住账号密码（Cookie），还有文件上传和邮件发送等功能。</p><p>但是这个阶段的学习你一定是痛苦的（至少我是很痛苦的），第一：代码量非常多。第二：有很多莫名其妙的bug（各种疑难杂症，非常搞心态）。</p><h2 id="阶段五：SSM框架"><a href="#阶段五：SSM框架" class="headerlink" title="阶段五：SSM框架"></a>阶段五：SSM框架</h2><p>上一阶段的学习中，你会发现的代码非常繁琐，而且有大量的重复代码，另外数据库的查询语句写起来也是十分麻烦。这个阶段的学习你将会翻开崭新的一页：Spring框架（顾名思义，你的春天来临了）。框架就是在原来JavaWeb的基础上，对一些代码进行封装，你原来要写十几行的代码，现在一行就搞定了。那么你可能会疑惑，我直接学SSM不行吗，答案是：可以。我们之所以要学JavaWeb是因为它是底层基础的东西，你只有知道JavaWeb有多麻烦，才知道SSM存在的意义。</p><p>SSM是三个框架的首字母缩写，对应的是Spring，SpringMVC，Mybatis，每一个框架都对原来JavaWeb阶段的MVC三层架构进行了更简便的操作，SpringMVC对应视图层（控制请求，传递数据），Spring对应业务层（处理业务），Mybatis对应持久层（操作数据库）。这里听不懂也没有关系，当你学到这里的时候，自然会明白。</p><p>学完SSM后一基本上可以在公司干点活儿啦，因为现在很多公司的项目都在用SSM，但如果想要进更好的公司，你还要继续学习。</p><h2 id="阶段六：SpringBoot-VUE"><a href="#阶段六：SpringBoot-VUE" class="headerlink" title="阶段六：SpringBoot+VUE"></a>阶段六：SpringBoot+VUE</h2><p>当偷懒的程序员们对代码封装后开发了SSM框架后，发现还不够偷懒，因为配置文件是在是太多了，所以又开始研发新的框架（人类的懒惰是会让技术进步的），于是新的框架又产生了：SpringBoot。简单来讲，SpringBoot就是在原先SSM框架上又进行了一次封装，省去了很多配置文件。</p><h3 id="Duubo-Zookeeper"><a href="#Duubo-Zookeeper" class="headerlink" title="Duubo+Zookeeper"></a>Duubo+Zookeeper</h3><p>在SpringBoot的学习中你将会学到这两项技术，它们是基于分布式系统提出的方案，也叫微服务。</p><h3 id="VUE（真正实现了前后端分离）"><a href="#VUE（真正实现了前后端分离）" class="headerlink" title="VUE（真正实现了前后端分离）"></a>VUE（真正实现了前后端分离）</h3><p>这里又出现了前端的东西，VUE是一个前端的框架，在如今的前后端分离时代，前端只管写前端页面，后端只用提供接口就行，现在很多公司都要求后端开发会VUE（真是太难了）。</p><p>当你完成这一阶段的学习，你已经能去一些中型的公司啦，稍微找一家好点公司，月薪7k+应该问题不大。这时候你也成为了一个合格码农，但是码农其实是很低级的，对于聪明的你，应该有更高的追求。</p><h2 id="阶段七：微服务"><a href="#阶段七：微服务" class="headerlink" title="阶段七：微服务"></a>阶段七：微服务</h2><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3><p>SpringCloud算是这几年的Web开发的潮流和趋势，它是基于分布式系统提出的一套完善的方案。你可以理解成有很多个SpringBoot的项目结合在一起，然后SpringCloud就是用来统一维护和管理这些项目(模块化)。大型公司都在用，但是小公司因为业务小的可怜，所以基本上也用不到，但这个技术一定是未来的趋势。学就完事了。</p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>Git入门非常快，几个小时就搞定了，它主要是用来管理项目和团队开发的，这个在工作之前最好学一下。</p><h2 id="阶段八：扩展和完善"><a href="#阶段八：扩展和完善" class="headerlink" title="阶段八：扩展和完善"></a>阶段八：扩展和完善</h2><p>当你完成上面七个阶段的学习，你可能会觉得你已经无敌了，你可能长叹一口气，心想，终于结束了，我当初也是这么想的，但后来才发现，原来所谓的结束，其实是另一轮更高难度关卡的开始······</p><h3 id="等待你的，是更多你不知道的东西"><a href="#等待你的，是更多你不知道的东西" class="headerlink" title="等待你的，是更多你不知道的东西"></a>等待你的，是更多你不知道的东西</h3><p>1、Linux（你的项目会放在上面运行）</p><p>2、JVM（大厂面试高频）</p><p>3、Redis（nosql数据库）</p><p>4、RocketMQ\RabbitMQ（消息队列）</p><p>5、Docker（集装箱）</p><p>6、Mycat（数据库中间件）</p><p>7、设计模式（很重要）</p><p>等等····</p><p>想要成为真正的程序员，你一定要会的两个东西：数据结构+算法，大厂非常喜欢算法好的童鞋。除此之外，你还要回过头来探究各种源码，JDK源码、Spring源码，SpringBoot源码，数据库底层原理，等等等等。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>首先感谢你能耐心的看到这里。</p><p>必须得承认的是，这条路确实不好走，但是别人也不好走，80%的人在中间的时候就放弃了，最后剩下的人寥寥无几。有些人在JavaSE的时候就已经放弃了，因为发现自己压根不适合敲代码；有些人在学前端的时候发现前端更有意思可能转前端了；有些人在JavaWeb时候因为太难bug太多也放弃了，能坚持到最后的人又有多少呢，所以不要恐惧，如果你真的想做这一行，趁年轻试一试，万一成功了呢。另外，如果你跟我一样，对代码是感兴趣的，一定要保持这颗初心，不要气馁和烦躁，当觉得自己快坚持不下去的时候，回过头来想想以前的初衷，调整状态，继续前进。</p><p>祝各位早日年入百万。</p><p>​                                                                                                                                                                                                  —————持续更新中</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上有很多关于Java学习路线的帖子，有些列了很长的思维导图，看着很费劲也看不明白，还有一些讲得太深，对于初学者来说不太友好。今天我从零开始给大家讲讲从起步到工作需要哪些技术，这些技术大概是做什么的。文章有点长，如果耐心看完，相信对你今后的学习规划和进度会有很大的帮助。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/07/09/%E8%81%8A%E4%B8%80%E8%81%8AJava%E8%BF%99%E6%9D%A1%E8%B7%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E8%B5%B0/image-20200709143657327.png&quot; alt=&quot;image-20200709143657327&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://www.bestsky.club/categories/Java/"/>
    
      <category term="学习路线" scheme="https://www.bestsky.club/categories/Java/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
    
      <category term="Java" scheme="https://www.bestsky.club/tags/Java/"/>
    
  </entry>
  
</feed>
